best_params,best_auc,best_acc,Model,run,error
{'max_depth': 5},0.9461557956515939,0.9488323164317274,Decision Tree,0,
"{'n_estimators': 363, 'max_depth': 13}",0.9868694144324397,0.9590574374079528,Random Forest,0,
{},0.0,0.0,Logistic Regression,0,"
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/model_selection/_validation.py"", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/base.py"", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py"", line 1222, in fit
    X, y = validate_data(
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 1370, in check_X_y
    X = check_array(
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 1107, in check_array
    _assert_all_finite(
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
"
{'max_depth': 9},0.9391970121381886,0.9447506837786662,Decision Tree,1,
"{'n_estimators': 153, 'max_depth': 4}",0.987533680138722,0.9610982537344835,Random Forest,1,
{},0.0,0.0,Logistic Regression,1,"
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/model_selection/_validation.py"", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/base.py"", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py"", line 1222, in fit
    X, y = validate_data(
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 1370, in check_X_y
    X = check_array(
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 1107, in check_array
    _assert_all_finite(
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File ""/Users/danielrapoport/Desktop/MIT MBAn '25/FASTEL/Daniel/venv/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
"
