best_params,best_auc,Model,run
{'max_depth': np.float64(4.0)},0.9222403626756039,Decision Tree,0
"{'max_depth': np.float64(20.0), 'n_estimators': np.float64(341.0)}",0.9842931024610632,Random Forest,0
{'C': np.float64(5642.02236437012)},0.9692940768853919,Logistic Regression,0
{'max_depth': np.float64(6.0)},0.9250776101624384,Decision Tree,1
"{'max_depth': np.float64(14.0), 'n_estimators': np.float64(106.0)}",0.98309794697433,Random Forest,1
{'C': np.float64(2224.422105370992)},0.9692940521298794,Logistic Regression,1
{'max_depth': np.float64(6.0)},0.9222131674261907,Decision Tree,2
"{'max_depth': np.float64(17.0), 'n_estimators': np.float64(297.0)}",0.9839242525914479,Random Forest,2
{'C': np.float64(12.937320199412204)},0.968180068266134,Logistic Regression,2
{'max_depth': np.float64(13.0)},0.9128309101254402,Decision Tree,3
"{'max_depth': np.float64(19.0), 'n_estimators': np.float64(200.0)}",0.9846113989363126,Random Forest,3
{'C': np.float64(7292.856921252934)},0.9692513074175414,Logistic Regression,3
{'max_depth': np.float64(5.0)},0.9255243076978834,Decision Tree,4
"{'max_depth': np.float64(19.0), 'n_estimators': np.float64(142.0)}",0.9844462541637983,Random Forest,4
{'C': np.float64(88.63811024756248)},0.969453598002926,Logistic Regression,4
